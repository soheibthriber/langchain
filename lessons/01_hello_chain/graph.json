{
  "metadata": {
    "version": "1.1",
    "run_id": "e422c366-f008-4276-b63e-427ea4de45e6",
    "created_at": "2025-09-20T11:15:36.043895Z",
    "lesson_id": "01_hello_chain",
    "tags": []
  },
  "nodes": [
    {
      "id": "prompt",
      "label": "PromptTemplate",
      "type": "promptTemplate",
      "subType": null,
      "tags": [
        "core",
        "input"
      ],
      "data": {
        "template": "Summarize in one sentence: {text}"
      }
    },
    {
      "id": "llm",
      "label": "MockLLM:mock-llm",
      "type": "chatModel",
      "subType": null,
      "tags": [
        "core",
        "llm"
      ],
      "data": {
        "model": "mock-llm",
        "temperature": 0.0,
        "provider": "mock"
      }
    },
    {
      "id": "parser",
      "label": "StrOutputParser",
      "type": "parser",
      "subType": null,
      "tags": [
        "core",
        "output"
      ],
      "data": {
        "parser_type": "string"
      }
    }
  ],
  "ports": [
    {
      "nodeId": "prompt",
      "portId": "in",
      "direction": "in",
      "label": "input"
    },
    {
      "nodeId": "prompt",
      "portId": "out",
      "direction": "out",
      "label": "formatted_prompt"
    },
    {
      "nodeId": "llm",
      "portId": "in",
      "direction": "in",
      "label": "prompt"
    },
    {
      "nodeId": "llm",
      "portId": "out",
      "direction": "out",
      "label": "completion"
    },
    {
      "nodeId": "parser",
      "portId": "in",
      "direction": "in",
      "label": "text"
    },
    {
      "nodeId": "parser",
      "portId": "out",
      "direction": "out",
      "label": "parsed_output"
    }
  ],
  "edges": [
    {
      "id": "prompt:out->llm:in",
      "source": {
        "nodeId": "prompt",
        "portId": "out"
      },
      "target": {
        "nodeId": "llm",
        "portId": "in"
      },
      "label": "formatted prompt"
    },
    {
      "id": "llm:out->parser:in",
      "source": {
        "nodeId": "llm",
        "portId": "out"
      },
      "target": {
        "nodeId": "parser",
        "portId": "in"
      },
      "label": "raw completion"
    }
  ],
  "groups": [
    {
      "id": "hello_chain",
      "label": "Hello Chain",
      "nodeIds": [
        "prompt",
        "llm",
        "parser"
      ],
      "type": "chain",
      "collapsed": false
    }
  ],
  "run": {
    "latency_ms": 0,
    "tokens_in": 0,
    "tokens_out": 0,
    "cost": null,
    "errors": null
  },
  "events": [
    {
      "ts_ms": 0,
      "kind": "invoke_start",
      "nodeId": "prompt",
      "edgeId": null,
      "payload": {
        "input": {
          "text": "hi you mock"
        }
      }
    },
    {
      "ts_ms": 0,
      "kind": "invoke_end",
      "nodeId": "prompt",
      "edgeId": null,
      "payload": {
        "formatted_prompt": "Summarize in one sentence: hi you mock"
      }
    },
    {
      "ts_ms": 0,
      "kind": "invoke_start",
      "nodeId": "llm",
      "edgeId": null,
      "payload": {
        "prompt": "Summarize in one sentence: hi you mock"
      }
    },
    {
      "ts_ms": 0,
      "kind": "invoke_end",
      "nodeId": "llm",
      "edgeId": null,
      "payload": {
        "output": "[MOCK:mock-llm] summary: Summarize in one sentence: hi you mock..."
      }
    },
    {
      "ts_ms": 0,
      "kind": "invoke_start",
      "nodeId": "parser",
      "edgeId": null,
      "payload": {
        "input": "[MOCK:mock-llm] summary: Summarize in one sentence: hi you mock..."
      }
    },
    {
      "ts_ms": 0,
      "kind": "invoke_end",
      "nodeId": "parser",
      "edgeId": null,
      "payload": {
        "output": "[MOCK:mock-llm] summary: Summarize in one sentence: hi you mock..."
      }
    }
  ],
  "artifacts": {
    "prompt": {
      "prompt": "Summarize in one sentence: {text}",
      "resolved_prompt": "Summarize in one sentence: hi you mock",
      "input_variables": [
        "text"
      ]
    },
    "llm": {
      "input": "Summarize in one sentence: hi you mock",
      "output": "[MOCK:mock-llm] summary: Summarize in one sentence: hi you mock...",
      "model_info": {
        "name": "mock-llm",
        "provider": "mock"
      }
    },
    "parser": {
      "input": "[MOCK:mock-llm] summary: Summarize in one sentence: hi you mock...",
      "output": "[MOCK:mock-llm] summary: Summarize in one sentence: hi you mock...",
      "parser_type": "string"
    }
  },
  "styles": {}
}